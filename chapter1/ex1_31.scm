(define (identity x) x)
(define (inc x)
	(+ x 1))
(define (product term a next b)
	(if (> a b)
		1
		(* (term a)
			(product term (next a) next b))))
(define (iter-product term a next b)
	(define (iter a result)
		(if (> a b)
			result
			(iter (next a) (* result (term a)))))
	(iter a 1))
(define (factorial n)
	(product identity 1 inc n))
(define (wallis-f x)
	(* (/ (* 2 x) (- (* 2 x) 1)) (/ (* 2 x) (+ (* 2 x) 1))))
(define (approx-pi n)
	(* 2.0 (product wallis-f 1 inc n)))