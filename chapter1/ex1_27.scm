(define (expmod base exp m)
	(cond ((= exp 0) 1)
			((even? exp)
				(remainder
					(square (expmod base (/ exp 2) m))
					m))
			(else
				(remainder
					(* base (expmod base (- exp 1) m))
					m))))
(define (fermat-test n)
	(define (try-it a)
		(= (expmod a n n) a))
	(try-it (+ 1 (random (- n 1)))))
(define (full-fermat-test n)
	(display "Test Number: ")
	(display n)
	(display " *** ")
	(define (iter-fermat-test a)
		(cond ((< a 0) true)
				((= (expmod a n n) a) (iter-fermat-test (- a 1)))
				(else false)))
	(if (iter-fermat-test (- n 1)) (display "PRIME OR CARMICHAEL NUMBER") (display "NON-PRIME NUMBER"))
	(newline))

(full-fermat-test 2)
(full-fermat-test 13)
(full-fermat-test 15)

(full-fermat-test 561)
(full-fermat-test 1105)
(full-fermat-test 1729)
(full-fermat-test 2465)
(full-fermat-test 2821)
(full-fermat-test 6601)