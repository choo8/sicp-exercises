(define (cube x)
	(* x x x))
(define (inc x)
	(+ x 1))
(define (sum term a next b)
	(if (> a b)
		0
		(+ (term a)
			(sum term (next a) next b))))
(define (integral f a b dx)
	(define (add-dx x)
		(+ x dx))
	(* (sum f (+ a (/ dx 2.0)) add-dx b)
		dx))
(define (simpsons-integral f a b n)
	(define h (/ (- b a) n))
	(define (add-h x)
		(+ x h))
	(define (simpsons-f k)
		(define yk (f (+ a (* k h))))
		(cond ((or (= 0 k) (= n k)) yk)
			((even? k) (* 2.0 yk))
			(else (* 4.0 yk))))
	(* (sum simpsons-f 0 inc n)
		(/ h 3.0)))